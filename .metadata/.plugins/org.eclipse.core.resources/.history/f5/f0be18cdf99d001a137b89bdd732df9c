package br.com.estudo.controller;

import java.net.URI;
import java.util.List;

import javax.validation.Valid;
import javax.websocket.server.PathParam;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.util.UriComponentsBuilder;

import br.com.estudo.dto.ClienteDTO;
import br.com.estudo.model.Cliente;
import br.com.estudo.repository.ClienteRepository;

@CrossOrigin
@RestController
@RequestMapping(path = "cliente", produces = MediaType.APPLICATION_JSON_VALUE)
public class ClienteController {

	@Autowired
	private ClienteRepository clienteRepository;

	@GetMapping("/{cpf}")
	public Cliente cliente(@PathVariable long cpf) {
		Cliente cliente = clienteRepository.findByCpf(cpf);
		return cliente;
	}

	@GetMapping("/listarClientes")
	private List<ClienteDTO> listarClientes() {
		List<Cliente> clientes = clienteRepository.findAll();
		return ClienteDTO.converter(clientes);
	}
	
	@PutMapping
	private ResponseEntity<Cliente> atualizaCliente(@PathVariable Cliente cliente) {
		clienteRepository.save(cliente);
		return ResponseEntity.ok(new Cliente());
	}
	
	
	@RequestMapping(method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<Cliente> cadastrar(@RequestBody @Valid Cliente cliente, UriComponentsBuilder uriBuilder) {
		clienteRepository.save(cliente);
		URI uri = uriBuilder.path("/cliente/{id}").buildAndExpand(cliente.getId()).toUri();
		return ResponseEntity.created(uri).body(new Cliente());
	}
	

}
